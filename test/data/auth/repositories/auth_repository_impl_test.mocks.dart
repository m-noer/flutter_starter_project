// Mocks generated by Mockito 5.0.17 from annotations
// in flutter_starter_project/test/data/auth/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_starter_project/data/auth/datasources/auth_local_data_source.dart'
    as _i6;
import 'package:flutter_starter_project/data/auth/datasources/auth_remote_data_source.dart'
    as _i3;
import 'package:flutter_starter_project/data/auth/models/models.dart' as _i5;
import 'package:flutter_starter_project/domain/auth/entities/entities.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLoginEntity_0 extends _i1.Fake implements _i2.LoginEntity {}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i3.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LoginEntity> requestLogin(_i5.LoginBody? body) =>
      (super.noSuchMethod(Invocation.method(#requestLogin, [body]),
              returnValue: Future<_i2.LoginEntity>.value(_FakeLoginEntity_0()))
          as _i4.Future<_i2.LoginEntity>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i6.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#saveToken, [token]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
